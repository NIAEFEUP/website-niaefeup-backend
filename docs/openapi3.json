{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "NIAEFEUP Website - Backend API specification",
    "description" : "This specification documents the available endpoints and possible operations on the website's backend.\nFor each of the operations, its purpose, security, requests and possible responses are documented.",
    "version" : "0.0.1-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost:8080"
  } ],
  "tags" : [ {
    "name" : "Authentication",
    "description" : "Endpoints and operations for authentication management."
  }, {
    "name" : "Accounts",
    "description" : "Endpoints and operations for account management."
  }, {
    "name" : "Events",
    "description" : "Endpoints and operations for event management."
  }, {
    "name" : "Generations",
    "description" : "Endpoints and operations for generations management."
  }, {
    "name" : "Posts",
    "description" : "Endpoints and operations for post management."
  }, {
    "name" : "Projects",
    "description" : "Endpoints and operations for project management."
  } ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get all the accounts",
        "description" : "The operation returns an array of accounts, allowing to easily retrieve all the created accounts.",
        "operationId" : "ACCOUNT/GetAllAccounts/should return all accounts",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-account-response"
                },
                "examples" : {
                  "ACCOUNT/GetAllAccounts/should return all accounts" : {
                    "value" : "[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1},{\"name\":\"Test Account 2\",\"email\":\"test_account2@test.com\",\"websites\":[],\"id\":2}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/new" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Create new accounts",
        "description" : "This endpoint operation creates a new account.",
        "operationId" : "ACCOUNT/",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/account-request"
              },
              "examples" : {
                "ACCOUNT/BioValidation/size" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"bio\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "ACCOUNT/BirthDateValidation/should be a valid date" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"birthDate\":\"invalid\"}"
                },
                "ACCOUNT/BirthDateValidation/should be in the past" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"birthDate\":\"01-01-3000\"}"
                },
                "ACCOUNT/CreateAccount/should create an account with an empty website list" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"no_website@email.com\",\"password\":\"test_password\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\"}"
                },
                "ACCOUNT/CreateAccount/should create the account" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\"}],\"password\":\"test_password\"}"
                },
                "ACCOUNT/CreateAccount/should fail to create account with existing email" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\"}],\"password\":\"test_password\"}"
                },
                "ACCOUNT/EmailValidation/should be a valid email" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"not-an-email\",\"password\":\"test_password\",\"websites\":[]}"
                },
                "ACCOUNT/EmailValidation/should be required" : {
                  "value" : "{\"name\":\"Test Account\",\"password\":\"test_password\",\"websites\":[]}"
                },
                "ACCOUNT/EmailValidation/should not be empty" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"\",\"password\":\"test_password\",\"websites\":[]}"
                },
                "ACCOUNT/GithubValidation/should be null or not blank" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"github\":\"\"}"
                },
                "ACCOUNT/GithubValidation/should be URL" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"github\":\"invalid.com\"}"
                },
                "ACCOUNT/IconPathValidation/should be bull or not blank" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[{\"url\":\"https://www.google.com\",\"iconPath\":\"\"}]}"
                },
                "ACCOUNT/IconPathValidation/should be URL" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[{\"url\":\"https://www.google.com\",\"iconPath\":\"invalid.com\"}]}"
                },
                "ACCOUNT/LinkedinValidation/should be null or not blank" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"linkedin\":\"\"}"
                },
                "ACCOUNT/LinkedinValidation/should be URL" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"linkedin\":\"invalid.com\"}"
                },
                "ACCOUNT/NameValidation/should be required" : {
                  "value" : "{\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[]}"
                },
                "ACCOUNT/NameValidation/size" : {
                  "value" : "{\"name\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[]}"
                },
                "ACCOUNT/PasswordValidation/should be required" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"websites\":[]}"
                },
                "ACCOUNT/PasswordValidation/size" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"websites\":[]}"
                },
                "ACCOUNT/PhotoPathValidation/should be null or not blank" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"photoPath\":\"\"}"
                },
                "ACCOUNT/PhotoPathValidation/should be URL" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[],\"photoPath\":\"invalid.com\"}"
                },
                "ACCOUNT/UrlValidation/should be required" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[{}]}"
                },
                "ACCOUNT/UrlValidation/should be URL" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[{\"url\":\"invalid.com\"}]}"
                },
                "ACCOUNT/UrlValidation/should not be empty" : {
                  "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"password\":\"test_password\",\"websites\":[{\"url\":\"\"}]}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "ACCOUNT/BioValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 5 and 500\",\"param\":\"bio\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "ACCOUNT/BirthDateValidation/should be a valid date" : {
                    "value" : "{\"errors\":[{\"message\":\"must be date\",\"value\":\"invalid\"}]}"
                  },
                  "ACCOUNT/BirthDateValidation/should be in the past" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a past date\",\"param\":\"birthDate\",\"value\":\"01-01-3000\"}]}"
                  },
                  "ACCOUNT/EmailValidation/should be a valid email" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a well-formed email address\",\"param\":\"email\",\"value\":\"not-an-email\"}]}"
                  },
                  "ACCOUNT/EmailValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"email\"}]}"
                  },
                  "ACCOUNT/EmailValidation/should not be empty" : {
                    "value" : "{\"errors\":[{\"message\":\"must not be empty\",\"param\":\"email\",\"value\":\"\"}]}"
                  },
                  "ACCOUNT/GithubValidation/should be null or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"github\",\"value\":\"\"}]}"
                  },
                  "ACCOUNT/GithubValidation/should be URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"github\",\"value\":\"invalid.com\"}]}"
                  },
                  "ACCOUNT/IconPathValidation/should be bull or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"websites[0].iconPath\",\"value\":\"\"}]}"
                  },
                  "ACCOUNT/IconPathValidation/should be URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"websites[0].iconPath\",\"value\":\"invalid.com\"}]}"
                  },
                  "ACCOUNT/LinkedinValidation/should be null or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"linkedin\",\"value\":\"\"}]}"
                  },
                  "ACCOUNT/LinkedinValidation/should be URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"linkedin\",\"value\":\"invalid.com\"}]}"
                  },
                  "ACCOUNT/NameValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"name\"}]}"
                  },
                  "ACCOUNT/NameValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 100\",\"param\":\"name\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "ACCOUNT/PasswordValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"password\"}]}"
                  },
                  "ACCOUNT/PasswordValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 8 and 100\",\"param\":\"password\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "ACCOUNT/PhotoPathValidation/should be null or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"photoPath\",\"value\":\"\"}]}"
                  },
                  "ACCOUNT/PhotoPathValidation/should be URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"photoPath\",\"value\":\"invalid.com\"}]}"
                  },
                  "ACCOUNT/UrlValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"url\"}]}"
                  },
                  "ACCOUNT/UrlValidation/should be URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"websites[0].url\",\"value\":\"invalid.com\"}]}"
                  },
                  "ACCOUNT/UrlValidation/should not be empty" : {
                    "value" : "{\"errors\":[{\"message\":\"must not be empty\",\"param\":\"websites[0].url\",\"value\":\"\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/account-response"
                },
                "examples" : {
                  "ACCOUNT/CreateAccount/should create an account with an empty website list" : {
                    "value" : "{\"name\":\"Test Account\",\"email\":\"no_website@email.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[],\"id\":1}"
                  },
                  "ACCOUNT/CreateAccount/should create the account" : {
                    "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "ACCOUNT/CreateAccount/should fail to create account with existing email" : {
                    "value" : "{\"errors\":[{\"message\":\"email already exists\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get accounts by ID",
        "description" : "This endpoint allows the retrieval of a single account using its ID.",
        "operationId" : "ACCOUNT/GetAccount/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the account to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "ACCOUNT/GetAccount/should fail if the account does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/account-response"
                },
                "examples" : {
                  "ACCOUNT/GetAccount/should return the account" : {
                    "value" : "{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/changePassword/{id}" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Change account password",
        "description" : "Replaces sets a new account password",
        "operationId" : "ACCOUNT/ChangePassword/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the account to change the password.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/password-change-request"
              },
              "examples" : {
                "ACCOUNT/ChangePassword/should change password" : {
                  "value" : "{\"oldPassword\":\"test_password\",\"newPassword\":\"test_password2\"}"
                },
                "ACCOUNT/ChangePassword/should fail due to wrong password" : {
                  "value" : "{\"oldPassword\":\"wrong_password\",\"newPassword\":\"test_password2\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "ACCOUNT/ChangePassword/should change password" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "ACCOUNT/ChangePassword/should fail due to wrong password" : {
                    "value" : "{\"errors\":[{\"message\":\"invalid credentials\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Check access token",
        "description" : "This endpoint operation allows to check if a given access token is valid, returning the associated account's information.",
        "operationId" : "AUTH/CheckToken/should ",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Bearer authentication token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidGVzdF9hY2NvdW50QHRlc3QuY29tIiwiZXhwIjoxNjc4NDg2NTExLCJpYXQiOjE2Nzg0ODI5MTEsInNjb3BlIjoiQk9BUkQgTUVNQkVSIn0.173wNoEZ3KDrgncU9AYzA20NhGoNpU8if24J2k3uVMg4lTTc6_02ag4ufMD4RshP_8_Yr38dfJ4c_N1EX1WAVJYkzCGy6LVo7Wpg7k0EHofn3zZF3MsMnNT0o0Rz9KKPs_Zy6cQIUwYjLxg50FeohtWs1RoVP1YJPVG6mJfacaLYUHOVxrdiOeNavXjog33QRsj8dObwJ9WCEJg4lcyoPVcuxCGXtk--j_IZqB5uEnE00zFX376GlFtMTs58xmB5aDeQ_2UwfvK08lbcsrqVQrcyyN1L8mWRLl300jvf5r4J9LTyFjPAbOxAhwGeKC_51yx5Xe7M2h1_1qhsQBNN2Q"
        } ],
        "responses" : {
          "401" : {
            "description" : "401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "AUTH/CheckToken/should fail when access token is invalid" : {
                    "value" : "{\"errors\":[{\"message\":\"An error occurred while attempting to decode the Jwt: Invalid JWT serialization: Missing dot delimiter(s)\"}]}"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "AUTH/CheckToken/should fail when no access token is provided" : {
                    "value" : "{\"errors\":[{\"message\":\"Access Denied\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-check-response"
                },
                "examples" : {
                  "AUTH/CheckToken/should return authenticated user" : {
                    "value" : "{\"authenticated_user\":{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/new" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Authenticate account",
        "description" : "This endpoint operation allows authentication using user's password and email, generating new access and refresh tokens to be used in following requests.",
        "operationId" : "AUTH/GetNewToken/should ",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-new-request"
              },
              "examples" : {
                "AUTH/GetNewToken/should fail when email is not registered" : {
                  "value" : "{\"email\":\"president@niaefeup.pt\",\"password\":\"testPassword\"}"
                },
                "AUTH/GetNewToken/should fail when password is incorrect" : {
                  "value" : "{\"email\":\"test_account@test.com\",\"password\":\"wrong_password\"}"
                },
                "AUTH/GetNewToken/should return access and refresh tokens" : {
                  "value" : "{\"email\":\"test_account@test.com\",\"password\":\"testPassword\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "AUTH/GetNewToken/should fail when email is not registered" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with email president@niaefeup.pt\"}]}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "AUTH/GetNewToken/should fail when password is incorrect" : {
                    "value" : "{\"errors\":[{\"message\":\"invalid credentials\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-new-response"
                },
                "examples" : {
                  "AUTH/GetNewToken/should return access and refresh tokens" : {
                    "value" : "{\"access_token\":\"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidGVzdF9hY2NvdW50QHRlc3QuY29tIiwiZXhwIjoxNjc4NDg2NTExLCJpYXQiOjE2Nzg0ODI5MTEsInNjb3BlIjoiQk9BUkQgTUVNQkVSIn0.173wNoEZ3KDrgncU9AYzA20NhGoNpU8if24J2k3uVMg4lTTc6_02ag4ufMD4RshP_8_Yr38dfJ4c_N1EX1WAVJYkzCGy6LVo7Wpg7k0EHofn3zZF3MsMnNT0o0Rz9KKPs_Zy6cQIUwYjLxg50FeohtWs1RoVP1YJPVG6mJfacaLYUHOVxrdiOeNavXjog33QRsj8dObwJ9WCEJg4lcyoPVcuxCGXtk--j_IZqB5uEnE00zFX376GlFtMTs58xmB5aDeQ_2UwfvK08lbcsrqVQrcyyN1L8mWRLl300jvf5r4J9LTyFjPAbOxAhwGeKC_51yx5Xe7M2h1_1qhsQBNN2Q\",\"refresh_token\":\"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidGVzdF9hY2NvdW50QHRlc3QuY29tIiwiZXhwIjoxNjc5MDg3NzExLCJpYXQiOjE2Nzg0ODI5MTEsInNjb3BlIjoiIn0.Jdu3s8w561feIuhdy5y0vL4o4nUQzWibhsEmn402ZmxsdsoOZrSXxYY7LvigNZQKq7hFwRLNiRYAIjWMIun1yJnxcFA0XXr_rPPqJx3BTRxbHO2xKyW_BJS3xpO9uLIbaf9oFfukXxqs-OwM3m1RNOsxq0do5LFCGa8ndKO0CRd7WGRJ19ksnIFS851hE-_p9DfR2dyl4gu5xk1VIG56g4dAc5aUQ3Lf4f3AHxryNRZGI7C8oEM1YQMnKNydYNAET_gJyVOloWpi0riMoEsgPioeTEkS9TBAttN-sBR8XUqJEkbnD2cGl32CSCN8p8Ag_29NtEB42SrGiRKsEdBJzg\"}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Refresh access token",
        "description" : "This endpoint operation allows the renewal of the access token, using the currently valid refresh token.",
        "operationId" : "AUTH/RefreshToken/should ",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-refresh-request"
              },
              "examples" : {
                "AUTH/RefreshToken/should fail when refresh token is invalid" : {
                  "value" : "{\"token\":\"invalid_refresh_token\"}"
                },
                "AUTH/RefreshToken/should return new access token" : {
                  "value" : "{\"token\":\"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidGVzdF9hY2NvdW50QHRlc3QuY29tIiwiZXhwIjoxNjc5MDg3NzExLCJpYXQiOjE2Nzg0ODI5MTEsInNjb3BlIjoiIn0.Jdu3s8w561feIuhdy5y0vL4o4nUQzWibhsEmn402ZmxsdsoOZrSXxYY7LvigNZQKq7hFwRLNiRYAIjWMIun1yJnxcFA0XXr_rPPqJx3BTRxbHO2xKyW_BJS3xpO9uLIbaf9oFfukXxqs-OwM3m1RNOsxq0do5LFCGa8ndKO0CRd7WGRJ19ksnIFS851hE-_p9DfR2dyl4gu5xk1VIG56g4dAc5aUQ3Lf4f3AHxryNRZGI7C8oEM1YQMnKNydYNAET_gJyVOloWpi0riMoEsgPioeTEkS9TBAttN-sBR8XUqJEkbnD2cGl32CSCN8p8Ag_29NtEB42SrGiRKsEdBJzg\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "401" : {
            "description" : "401",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "AUTH/RefreshToken/should fail when refresh token is invalid" : {
                    "value" : "{\"errors\":[{\"message\":\"invalid refresh token\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-refresh-response"
                },
                "examples" : {
                  "AUTH/RefreshToken/should return new access token" : {
                    "value" : "{\"access_token\":\"eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidGVzdF9hY2NvdW50QHRlc3QuY29tIiwiZXhwIjoxNjc4NDg2NTEyLCJpYXQiOjE2Nzg0ODI5MTIsInNjb3BlIjoiQk9BUkQgTUVNQkVSIn0.mEdBxDQnfMbhM4fQ7VNFC0DtCDRf4rQv_ky1PTkaN8nLT8Q705fDYweaRxMthmtoNQKNzrw51C02r9eEvuJq_sRDzFpIx6AwL_UJ9E6gXQ3R8q8-qZ9CJUII9GpM4qsYadcR763UafjXdpctltzvEDUdqenaF0UbC-OTtmftLXEUZ60b61z4V0eZS_Z3VQYj9KFPeLMp3SsUPPp66btuEtZcad5PEyTCrKCpoEKS8B7Sij_0xOnYY2CELRKyoVD8xvoSC-BIo2Hmy6KiYNxAYtNkiyWQLImeDvPvTNK0SqUJQYx2c0_JIKU0HpoNvOf0qXM4PT73s_PyT4XvQ0fv2g\"}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get all the events",
        "description" : "The operation returns an array of events, allowing to easily retrieve all the created events.\nThis is useful for example in the frontend's event page, where events are displayed.",
        "operationId" : "EVENT/GetAllEvents/should return all events",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-event-response"
                },
                "examples" : {
                  "EVENT/GetAllEvents/should return all events" : {
                    "value" : "[{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1},{\"title\":\"Bad event\",\"description\":\"This event was a failure\",\"teamMembers\":[],\"dateInterval\":{\"startDate\":\"27-10-2021\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail2\",\"id\":2}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/new" : {
      "post" : {
        "tags" : [ "Events" ],
        "summary" : "Create new events",
        "description" : "This endpoint operation creates a new event.",
        "operationId" : "EVENT/",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/event-request"
              },
              "examples" : {
                "EVENT/CreateEvent/should create a new event" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"teamMembersIds\":[1],\"registerUrl\":\"https://docs.google.com/forms\",\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"slug\":\"great-event\"}"
                },
                "EVENT/CreateEvent/should fail if slug already exists" : {
                  "value" : "{\"title\":\"Duplicated slug\",\"description\":\"This have a duplicated slug\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-08-2022\",\"endDate\":\"30-08-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/RegisterUrlValidation/should be a URL" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"slug\":\"great-event\",\"registerUrl\":\"invalid.com\"}"
                },
                "EVENT/RegisterUrlValidation/should be null or not blank" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"slug\":\"great-event\",\"registerUrl\":\"\"}"
                },
                "EVENT/SlugValidation/size" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"slug\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "EVENT/ThumbnailPathValidation/should not be empty" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"\",\"slug\":\"great-event\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/CreateEvent/should create a new event" : {
                    "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/CreateEvent/should fail if slug already exists" : {
                    "value" : "{\"errors\":[{\"message\":\"slug already exists\"}]}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/RegisterUrlValidation/should be a URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"registerUrl\",\"value\":\"invalid.com\"}]}"
                  },
                  "EVENT/RegisterUrlValidation/should be null or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"registerUrl\",\"value\":\"\"}]}"
                  },
                  "EVENT/SlugValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"slug\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "EVENT/ThumbnailPathValidation/should not be empty" : {
                    "value" : "{\"errors\":[{\"message\":\"must not be empty\",\"param\":\"thumbnailPath\",\"value\":\"\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get events by ID",
        "description" : "This endpoint allows the retrieval of a single event using its ID. It might be used to generate the specific event page.",
        "operationId" : "EVENT/GetEventById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/GetEventById/should fail if the event does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"event not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/GetEventById/should return the event" : {
                    "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1}"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Events" ],
        "summary" : "Update events",
        "description" : "Update a previously created event, using its ID.",
        "operationId" : "EVENT/",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the event to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/event-request"
              },
              "examples" : {
                "EVENT/CategoryValidation/size" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"category\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "EVENT/DateIntervalValidation/should be a DateInterval" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"09-01-2023\",\"endDate\":\"08-01-2023\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/DateIntervalValidation/should be required" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/DescriptionValidation/should be required" : {
                  "value" : "{\"title\":\"Great event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/DescriptionValidation/size" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/LocationValidation/size" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"location\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "EVENT/ThumbnailPathValidation/should be a URL" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"invalid.com\"}"
                },
                "EVENT/ThumbnailPathValidation/should be required" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"}}"
                },
                "EVENT/TitleValidation/should be required" : {
                  "value" : "{\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/TitleValidation/size" : {
                  "value" : "{\"title\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\"}"
                },
                "EVENT/UpdateEvent/should fail if the event does not exist" : {
                  "value" : "{\"title\":\"New Title\",\"description\":\"New Description\",\"dateInterval\":{\"startDate\":\"01-12-2022\"},\"thumbnailPath\":\"http://test.com/thumbnail/1\",\"associatedRoles\":[]}"
                },
                "EVENT/UpdateEvent/should update the event" : {
                  "value" : "{\"title\":\"New event title\",\"description\":\"New event description\",\"teamMembersIds\":[],\"registerUrl\":\"https://example.com/newUrl\",\"dateInterval\":{\"startDate\":\"01-12-2022\",\"endDate\":\"02-12-2022\"},\"location\":\"FLUP\",\"category\":\"Greatest Events\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"slug\":\"new-slug\"}"
                },
                "EVENT/UrlValidation/should be a URL" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"registerUrl\":\"invalid.com\"}"
                },
                "EVENT/UrlValidation/should be null or not blank" : {
                  "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"registerUrl\":\"\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/CategoryValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 50\",\"param\":\"category\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "EVENT/DateIntervalValidation/should be a DateInterval" : {
                    "value" : "{\"errors\":[{\"message\":\"endDate must be after startDate\",\"param\":\"dateInterval\",\"value\":{\"startDate\":\"09-01-2023\",\"endDate\":\"08-01-2023\"}}]}"
                  },
                  "EVENT/DateIntervalValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"dateInterval\"}]}"
                  },
                  "EVENT/DescriptionValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"description\"}]}"
                  },
                  "EVENT/DescriptionValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 10 and 10000\",\"param\":\"description\",\"value\":\"\"}]}"
                  },
                  "EVENT/LocationValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"location\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "EVENT/ThumbnailPathValidation/should be a URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"thumbnailPath\",\"value\":\"invalid.com\"}]}"
                  },
                  "EVENT/ThumbnailPathValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"thumbnailPath\"}]}"
                  },
                  "EVENT/TitleValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"title\"}]}"
                  },
                  "EVENT/TitleValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"title\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "EVENT/UrlValidation/should be a URL" : {
                    "value" : "{\"errors\":[{\"message\":\"must be a valid URL\",\"param\":\"registerUrl\",\"value\":\"invalid.com\"}]}"
                  },
                  "EVENT/UrlValidation/should be null or not blank" : {
                    "value" : "{\"errors\":[{\"message\":\"must be null or not blank\",\"param\":\"registerUrl\",\"value\":\"\"}]}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/UpdateEvent/should fail if the event does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"event not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/UpdateEvent/should update the event" : {
                    "value" : "{\"title\":\"New event title\",\"description\":\"New event description\",\"teamMembers\":[],\"slug\":\"new-slug\",\"registerUrl\":\"https://example.com/newUrl\",\"dateInterval\":{\"startDate\":\"01-12-2022\",\"endDate\":\"02-12-2022\"},\"location\":\"FLUP\",\"category\":\"Greatest Events\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"id\":1}"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Events" ],
        "summary" : "Delete events",
        "description" : "This operation deletes an event using its ID.",
        "operationId" : "EVENT/DeleteEvent/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the event to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "EVENT/DeleteEvent/should delete the event" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/DeleteEvent/should fail if the event does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"event not found with id 1234\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{slug}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get events by slug",
        "description" : "This endpoint allows the retrieval of a single event using its slug.",
        "operationId" : "EVENT/GetEventBySlug/should ",
        "parameters" : [ {
          "name" : "slug",
          "in" : "path",
          "description" : "Short and friendly textual event identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/GetEventBySlug/should fail if the event slug does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"event not found with slug fail-slug\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/GetEventBySlug/should return the event" : {
                    "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/category/{category}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Get events by category",
        "description" : "This endpoint allows the retrieval of events labeled with a given category. It might be used to filter events in the event page.",
        "operationId" : "EVENT/GetEventsByCategory/should return all events of the category",
        "parameters" : [ {
          "name" : "category",
          "in" : "path",
          "description" : "Category of the events to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-event-response"
                },
                "examples" : {
                  "EVENT/GetEventsByCategory/should return all events of the category" : {
                    "value" : "[{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1},{\"title\":\"Cool event\",\"description\":\"This event was a awesome\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"dateInterval\":{\"startDate\":\"11-09-2022\"},\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail2\",\"id\":4}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/addTeamMember/{accountId}" : {
      "put" : {
        "tags" : [ "Events" ],
        "summary" : "Add team member to event",
        "description" : "This operation adds a team member to a given event.",
        "operationId" : "EVENT/AddTeamMember/should ",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "ID of the event to add the member to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of the account to add",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/AddTeamMember/should add a team member" : {
                    "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1},{\"name\":\"Another test Account\",\"email\":\"test2_account@test.com\",\"bio\":\"This is another test account\",\"birthDate\":\"04-04-2003\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":2}],\"id\":2}],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/AddTeamMember/should fail if the team member does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with id 1234\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/removeTeamMember/{accountId}" : {
      "put" : {
        "tags" : [ "Events" ],
        "summary" : "Remove a team member from event",
        "description" : "This operation removes a team member of a given event.",
        "operationId" : "EVENT/RemoveTeamMember/should ",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "ID of the event to remove the member from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of the account to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "EVENT/RemoveTeamMember/should fail if the team member does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event-response"
                },
                "examples" : {
                  "EVENT/RemoveTeamMember/should remove a team member" : {
                    "value" : "{\"title\":\"Great event\",\"description\":\"This was a nice and iconic event\",\"teamMembers\":[],\"slug\":\"great-event\",\"registerUrl\":\"https://docs.google.com/forms\",\"dateInterval\":{\"startDate\":\"28-07-2022\",\"endDate\":\"30-07-2022\"},\"location\":\"FEUP\",\"category\":\"Great Events\",\"thumbnailPath\":\"https://example.com/exampleThumbnail\",\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations" : {
      "get" : {
        "tags" : [ "Generations" ],
        "summary" : "Get all the school years with recorded generations",
        "description" : "This returns an array of years with recorded generations,\nallowing other operations on the generations themselves.",
        "operationId" : "GENERATION/GetAllGenerations/should return all generation years",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-generation-years-response"
                },
                "examples" : {
                  "GENERATION/GetAllGenerations/should return all generation years" : {
                    "value" : "[\"22-23\",\"21-22\"]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations/latest" : {
      "get" : {
        "tags" : [ "Generations" ],
        "summary" : "Get the latest generation",
        "description" : "This operation retrieves the latest generation using its id.",
        "operationId" : "GENERATION/GetLatestGeneration/should ",
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/GetLatestGeneration/should fail if no generations" : {
                    "value" : "{\"errors\":[{\"message\":\"no generations created yet\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-sections-response"
                },
                "examples" : {
                  "GENERATION/GetLatestGeneration/should return the latest generation" : {
                    "value" : "[{\"section\":\"section-role1\",\"accounts\":[{\"name\":\"Test Account\",\"email\":\"test-account@gmail.com\",\"websites\":[],\"id\":1,\"roles\":[\"regular-role1\",\"regular-role2\"]}]},{\"section\":\"section-role2\",\"accounts\":[{\"name\":\"Test Account 2\",\"email\":\"test-account2@gmail.com\",\"websites\":[],\"id\":2,\"roles\":[\"regular-role2\"]}]}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations/new" : {
      "post" : {
        "tags" : [ "Generations" ],
        "summary" : "Create new generations",
        "description" : "This operation creates a new generation.",
        "operationId" : "GENERATION/",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/generation-request"
              },
              "examples" : {
                "GENERATION/CreateGeneration/should create a generation with roles" : {
                  "value" : "{\"schoolYear\":\"20-21\",\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"accountIds\":[],\"associatedActivities\":[]},{\"name\":\"role2\",\"permissions\":[],\"isSection\":false,\"accountIds\":[],\"associatedActivities\":[]}]}"
                },
                "GENERATION/CreateGeneration/should create a generation with roles and permissions" : {
                  "value" : "{\"schoolYear\":\"20-21\",\"roles\":[{\"name\":\"role1\",\"permissions\":[0,1],\"isSection\":true,\"accountIds\":[],\"associatedActivities\":[]}]}"
                },
                "GENERATION/CreateGeneration/should create a new generation" : {
                  "value" : "{\"schoolYear\":\"22-23\",\"roles\":[]}"
                },
                "GENERATION/CreateGeneration/should fail if year is not specified and there are no generations" : {
                  "value" : "{\"roles\":[]}"
                },
                "GENERATION/WithExistingGenerations/should create a generation with role and associated accounts" : {
                  "value" : "{\"schoolYear\":\"20-21\",\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"accountIds\":[1,2],\"associatedActivities\":[]}]}"
                },
                "GENERATION/WithExistingGenerations/should create a generation with role and associated activities" : {
                  "value" : "{\"schoolYear\":\"20-21\",\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"accountIds\":[],\"associatedActivities\":[{\"activityId\":1,\"permissions\":[0,1]},{\"activityId\":2,\"permissions\":[2]}]}]}"
                },
                "GENERATION/WithExistingGenerations/should fail if the year already exists" : {
                  "value" : "{\"schoolYear\":\"22-23\",\"roles\":[]}"
                },
                "GENERATION/WithExistingGenerations/should infer the year if not specified and create generation" : {
                  "value" : "{\"roles\":[]}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-response"
                },
                "examples" : {
                  "GENERATION/CreateGeneration/should create a generation with roles" : {
                    "value" : "{\"schoolYear\":\"20-21\",\"id\":1,\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"id\":1,\"associatedActivities\":[]},{\"name\":\"role2\",\"permissions\":[],\"isSection\":false,\"id\":2,\"associatedActivities\":[]}]}"
                  },
                  "GENERATION/CreateGeneration/should create a generation with roles and permissions" : {
                    "value" : "{\"schoolYear\":\"20-21\",\"id\":1,\"roles\":[{\"name\":\"role1\",\"permissions\":[\"CREATE_ACCOUNT\",\"VIEW_ACCOUNT\"],\"isSection\":true,\"id\":1,\"associatedActivities\":[]}]}"
                  },
                  "GENERATION/CreateGeneration/should create a new generation" : {
                    "value" : "{\"schoolYear\":\"22-23\",\"id\":1,\"roles\":[]}"
                  },
                  "GENERATION/WithExistingGenerations/should create a generation with role and associated accounts" : {
                    "value" : "{\"schoolYear\":\"20-21\",\"id\":3,\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"id\":7,\"associatedActivities\":[]}]}"
                  },
                  "GENERATION/WithExistingGenerations/should create a generation with role and associated activities" : {
                    "value" : "{\"schoolYear\":\"20-21\",\"id\":3,\"roles\":[{\"name\":\"role1\",\"permissions\":[],\"isSection\":true,\"id\":7,\"associatedActivities\":[{\"permissions\":[\"CREATE_ACCOUNT\",\"VIEW_ACCOUNT\"],\"id\":3,\"activity\":{\"title\":\"NIJobs\",\"description\":\"cool project\",\"teamMembers\":[],\"isArchived\":false,\"technologies\":[],\"id\":1}},{\"permissions\":[\"EDIT_ACCOUNT\"],\"id\":4,\"activity\":{\"title\":\"SINF\",\"description\":\"cool event\",\"teamMembers\":[],\"dateInterval\":{\"startDate\":\"10-10-2023\"},\"thumbnailPath\":\"https://www.google.com\",\"id\":2}}]}]}"
                  },
                  "GENERATION/WithExistingGenerations/should infer the year if not specified and create generation" : {
                    "value" : "{\"schoolYear\":\"23-24\",\"id\":3,\"roles\":[]}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/CreateGeneration/should fail if year is not specified and there are no generations" : {
                    "value" : "{\"errors\":[{\"message\":\"no generations created yet, please specify school year\"}]}"
                  },
                  "GENERATION/WithExistingGenerations/should fail if the year already exists" : {
                    "value" : "{\"errors\":[{\"message\":\"generation already exists\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}" : {
      "get" : {
        "tags" : [ "Generations" ],
        "summary" : "Get a generation by id",
        "description" : "This operation retrieves the generation using its id.",
        "operationId" : "GENERATION/GetGenerationById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/GetGenerationById/should fail if the year does not exit" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with id 123\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-sections-response"
                },
                "examples" : {
                  "GENERATION/GetGenerationById/should return the generation of the id" : {
                    "value" : "[{\"section\":\"section-role1\",\"accounts\":[{\"name\":\"Test Account\",\"email\":\"test-account@gmail.com\",\"websites\":[],\"id\":1,\"roles\":[\"regular-role1\",\"regular-role2\"]}]},{\"section\":\"section-role2\",\"accounts\":[{\"name\":\"Test Account 2\",\"email\":\"test-account2@gmail.com\",\"websites\":[],\"id\":2,\"roles\":[\"regular-role2\"]}]}]"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Generations" ],
        "summary" : "Delete a generation by its id",
        "description" : "Delete a generation by its id, using its id as a parameter",
        "operationId" : "GENERATION/DeleteGenerationById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "GENERATION/DeleteGenerationById/should delete the generation" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/DeleteGenerationById/should fail if the generation does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with id 123\"}]}"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Generations" ],
        "summary" : "Update a generation school year by its Id",
        "description" : "Update a generation school year, using its Id as a parameter",
        "operationId" : "GENERATION/UpdateGenerationById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id of a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/update-generation-year-request"
              },
              "examples" : {
                "GENERATION/UpdateGenerationById/should fail if the generation does not exist" : {
                  "value" : "{\"schoolYear\":\"19-20\"}"
                },
                "GENERATION/UpdateGenerationById/should fail if the new year is already taken" : {
                  "value" : "{\"schoolYear\":\"21-22\"}"
                },
                "GENERATION/UpdateGenerationById/should fail if the new year is not valid" : {
                  "value" : "{\"schoolYear\":\"123\"}"
                },
                "GENERATION/UpdateGenerationById/should update the generation year" : {
                  "value" : "{\"schoolYear\":\"19-20\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationById/should fail if the generation does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with id 123\"}]}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationById/should fail if the new year is already taken" : {
                    "value" : "{\"errors\":[{\"message\":\"generation already exists\"}]}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationById/should fail if the new year is not valid" : {
                    "value" : "{\"errors\":[{\"message\":\"must be formatted as <xx-yy> where yy=xx+1\",\"param\":\"schoolYear\",\"value\":\"123\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationById/should update the generation year" : {
                    "value" : "{\"schoolYear\":\"19-20\",\"id\":1,\"roles\":[{\"name\":\"section-role1\",\"permissions\":[],\"isSection\":true,\"id\":1,\"associatedActivities\":[{\"permissions\":[],\"id\":1,\"activity\":{\"title\":\"NIJobs\",\"description\":\"cool project\",\"teamMembers\":[],\"isArchived\":false,\"technologies\":[],\"id\":1}}]},{\"name\":\"section-role2\",\"permissions\":[],\"isSection\":true,\"id\":2,\"associatedActivities\":[]},{\"name\":\"regular-role1\",\"permissions\":[],\"isSection\":false,\"id\":3,\"associatedActivities\":[{\"permissions\":[],\"id\":2,\"activity\":{\"title\":\"SINF\",\"description\":\"cool event\",\"teamMembers\":[],\"dateInterval\":{\"startDate\":\"10-10-2023\"},\"thumbnailPath\":\"https://www.google.com\",\"id\":2}}]},{\"name\":\"regular-role2\",\"permissions\":[],\"isSection\":false,\"id\":4,\"associatedActivities\":[]}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations/{schoolYear}" : {
      "get" : {
        "tags" : [ "Generations" ],
        "summary" : "Get generation by school year",
        "description" : "This operation retrieves the generation associated with a given school year.",
        "operationId" : "GENERATION/GetGenerationByYear/should ",
        "parameters" : [ {
          "name" : "schoolYear",
          "in" : "path",
          "description" : "School year associated with a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/GetGenerationByYear/should fail if the year does not exit" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with year 14-15\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-sections-response"
                },
                "examples" : {
                  "GENERATION/GetGenerationByYear/should return the generation of the year" : {
                    "value" : "[{\"section\":\"section-role1\",\"accounts\":[{\"name\":\"Test Account\",\"email\":\"test-account@gmail.com\",\"websites\":[],\"id\":1,\"roles\":[\"regular-role1\",\"regular-role2\"]}]},{\"section\":\"section-role2\",\"accounts\":[{\"name\":\"Test Account 2\",\"email\":\"test-account2@gmail.com\",\"websites\":[],\"id\":2,\"roles\":[\"regular-role2\"]}]}]"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Generations" ],
        "summary" : "Delete a generation by its school year",
        "description" : "Delete a generation by its school year, using its school year as a parameter",
        "operationId" : "GENERATION/DeleteGenerationByYear/should ",
        "parameters" : [ {
          "name" : "schoolYear",
          "in" : "path",
          "description" : "School year associated with a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "GENERATION/DeleteGenerationByYear/should delete the generation" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/DeleteGenerationByYear/should fail if the generation does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with year 17-18\"}]}"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Generations" ],
        "summary" : "Update a generation school year by its school year",
        "description" : "Update a generation school year, using its school year as a parameter",
        "operationId" : "GENERATION/UpdateGenerationByYear/should ",
        "parameters" : [ {
          "name" : "schoolYear",
          "in" : "path",
          "description" : "School year associated with a generation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/update-generation-year-request"
              },
              "examples" : {
                "GENERATION/UpdateGenerationByYear/should fail if the new year is already taken" : {
                  "value" : "{\"schoolYear\":\"21-22\"}"
                },
                "GENERATION/UpdateGenerationByYear/should fail if the new year is not valid" : {
                  "value" : "{\"schoolYear\":\"123\"}"
                },
                "GENERATION/UpdateGenerationByYear/should fail if the year does not exist" : {
                  "value" : "{\"schoolYear\":\"19-20\"}"
                },
                "GENERATION/UpdateGenerationByYear/should update the generation year" : {
                  "value" : "{\"schoolYear\":\"19-20\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationByYear/should fail if the new year is already taken" : {
                    "value" : "{\"errors\":[{\"message\":\"generation already exists\"}]}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationByYear/should fail if the new year is not valid" : {
                    "value" : "{\"errors\":[{\"message\":\"must be formatted as <xx-yy> where yy=xx+1\",\"param\":\"schoolYear\",\"value\":\"123\"}]}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationByYear/should fail if the year does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"generation not found with year 17-18\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/generation-response"
                },
                "examples" : {
                  "GENERATION/UpdateGenerationByYear/should update the generation year" : {
                    "value" : "{\"schoolYear\":\"19-20\",\"id\":1,\"roles\":[{\"name\":\"section-role1\",\"permissions\":[],\"isSection\":true,\"id\":1,\"associatedActivities\":[{\"permissions\":[],\"id\":1,\"activity\":{\"title\":\"NIJobs\",\"description\":\"cool project\",\"teamMembers\":[],\"isArchived\":false,\"technologies\":[],\"id\":1}}]},{\"name\":\"section-role2\",\"permissions\":[],\"isSection\":true,\"id\":2,\"associatedActivities\":[]},{\"name\":\"regular-role1\",\"permissions\":[],\"isSection\":false,\"id\":3,\"associatedActivities\":[{\"permissions\":[],\"id\":2,\"activity\":{\"title\":\"SINF\",\"description\":\"cool event\",\"teamMembers\":[],\"dateInterval\":{\"startDate\":\"10-10-2023\"},\"thumbnailPath\":\"https://www.google.com\",\"id\":2}}]},{\"name\":\"regular-role2\",\"permissions\":[],\"isSection\":false,\"id\":4,\"associatedActivities\":[]}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts" : {
      "get" : {
        "tags" : [ "Posts" ],
        "summary" : "Get all the posts",
        "description" : "The operation returns an array of posts, allowing to easily retrieve all the created posts.",
        "operationId" : "POST/GetAllPosts/should return all posts",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-post-response"
                },
                "examples" : {
                  "POST/GetAllPosts/should return all posts" : {
                    "value" : "[{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:15\",\"id\":1,\"slug\":\"new-test-released\"},{\"title\":\"NIAEFEUP gets a new president\",\"body\":\"New president promised to buy new chairs\",\"thumbnailPath\":\"https://thumbnails/pres.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:15\",\"id\":2}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/new" : {
      "post" : {
        "tags" : [ "Posts" ],
        "summary" : "Create new posts",
        "description" : "This endpoint operation creates a new post.",
        "operationId" : "POST/CreatePost/should ",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/post-request"
              },
              "examples" : {
                "POST/CreatePost/should create a new post" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"slug\":\"new-test-released\"}"
                },
                "POST/CreatePost/should fail to create post with existing slug" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"slug\":\"new-test-released\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/post-response"
                },
                "examples" : {
                  "POST/CreatePost/should create a new post" : {
                    "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:15\",\"id\":1,\"slug\":\"new-test-released\"}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/CreatePost/should fail to create post with existing slug" : {
                    "value" : "{\"errors\":[{\"message\":\"slug already exists\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}" : {
      "get" : {
        "tags" : [ "Posts" ],
        "summary" : "Get posts by ID",
        "description" : "This endpoint allows the retrieval of a single post using its ID. It might be used to generate the specific post page.",
        "operationId" : "POST/GetPostById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the post to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/GetPostById/should fail if the post does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"post not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/post-response"
                },
                "examples" : {
                  "POST/GetPostById/should return the post" : {
                    "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:15\",\"id\":1,\"slug\":\"new-test-released\"}"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Posts" ],
        "summary" : "Update posts",
        "description" : "Update a previously created post, using its ID.",
        "operationId" : "POST/",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the post to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/post-request"
              },
              "examples" : {
                "POST/BodyValidation/should be required" : {
                  "value" : "{\"title\":\"New test released\",\"thumbnailPath\":\"https://thumbnails/test.png\"}"
                },
                "POST/BodyValidation/size" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"aaaaaaaaa\",\"thumbnailPath\":\"https://thumbnails/test.png\"}"
                },
                "POST/SlugValidation/size" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"slug\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "POST/ThumbnailValidation/should be required" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\"}"
                },
                "POST/ThumbnailValidation/should not be empty" : {
                  "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"\"}"
                },
                "POST/TitleValidation/should be required" : {
                  "value" : "{\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\"}"
                },
                "POST/TitleValidation/size" : {
                  "value" : "{\"title\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\"}"
                },
                "POST/UpdatePost/should fail if the post does not exist" : {
                  "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"thumbnails/new.png\"}"
                },
                "POST/UpdatePost/should fail if the slug already exist" : {
                  "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"slug\":\"duplicated-slug\"}"
                },
                "POST/UpdatePost/should update the post with the slug" : {
                  "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"slug\":\"new-slug\"}"
                },
                "POST/UpdatePost/should update the post without the slug" : {
                  "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"https://thumbnails/new.png\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/BodyValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"body\"}]}"
                  },
                  "POST/BodyValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be greater or equal to 10\",\"param\":\"body\",\"value\":\"aaaaaaaaa\"}]}"
                  },
                  "POST/SlugValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"slug\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "POST/ThumbnailValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"thumbnailPath\"}]}"
                  },
                  "POST/ThumbnailValidation/should not be empty" : {
                    "value" : "{\"errors\":[{\"message\":\"must not be empty\",\"param\":\"thumbnailPath\",\"value\":\"\"}]}"
                  },
                  "POST/TitleValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"title\"}]}"
                  },
                  "POST/TitleValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"title\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/UpdatePost/should fail if the post does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"post not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/UpdatePost/should fail if the slug already exist" : {
                    "value" : "{\"errors\":[{\"message\":\"slug already exists\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/post-response"
                },
                "examples" : {
                  "POST/UpdatePost/should update the post with the slug" : {
                    "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:16\",\"id\":1,\"slug\":\"new-slug\"}"
                  },
                  "POST/UpdatePost/should update the post without the slug" : {
                    "value" : "{\"title\":\"New Title\",\"body\":\"New Body of the post\",\"thumbnailPath\":\"https://thumbnails/new.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:16\",\"id\":1,\"slug\":\"new-test-released\"}"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Posts" ],
        "summary" : "Delete posts",
        "description" : "This operation deletes an event using its ID.",
        "operationId" : "POST/DeletePost/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "POST/DeletePost/should delete the post" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/DeletePost/should fail if the post does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"post not found with id 1234\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{slug}" : {
      "get" : {
        "tags" : [ "Posts" ],
        "summary" : "Get posts by slug",
        "description" : "This endpoint allows the retrieval of a single post using its slug. It might be used to generate the specific post page.",
        "operationId" : "POST/GetPostBySlang/should ",
        "parameters" : [ {
          "name" : "slug",
          "in" : "path",
          "description" : "Short and friendly textual post identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "POST/GetPostBySlang/should fail if the post does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"post not found with slug fail-slug\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/post-response"
                },
                "examples" : {
                  "POST/GetPostBySlang/should return the post" : {
                    "value" : "{\"title\":\"New test released\",\"body\":\"this is a test post\",\"thumbnailPath\":\"https://thumbnails/test.png\",\"publishDate\":\"10-03-2023\",\"lastUpdatedAt\":\"10-03-2023 21:15:15\",\"id\":1,\"slug\":\"new-test-released\"}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get all the projects",
        "description" : "The operation returns an array of projects, allowing to easily retrieve all the created projects. This is useful for example in the frontend project page, where projects are displayed.",
        "operationId" : "PROJECT/GetAllProjects/should return all projects",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/arrayOf-project-response"
                },
                "examples" : {
                  "PROJECT/GetAllProjects/should return all projects" : {
                    "value" : "[{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1},{\"title\":\"NIJobs\",\"description\":\"Job platform for students\",\"teamMembers\":[],\"isArchived\":false,\"technologies\":[\"ExpressJS\",\"React\"],\"id\":2}]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/new" : {
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Create new projects",
        "description" : "This endpoint operation creates a new project.",
        "operationId" : "PROJECT/",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-request"
              },
              "examples" : {
                "PROJECT/CreateProject/should create a new project" : {
                  "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembersIds\":[1],\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"slug\":\"awesome-project\"}"
                },
                "PROJECT/CreateProject/should fail if slug already exists" : {
                  "value" : "{\"title\":\"Duplicated Slug\",\"description\":\"this is a test project with a duplicated slug\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"]}"
                },
                "PROJECT/DescriptionValidation/should be required" : {
                  "value" : "{\"title\":\"Awesome project\"}"
                },
                "PROJECT/DescriptionValidation/size" : {
                  "value" : "{\"title\":\"Awesome project\",\"description\":\"\"}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/CreateProject/should create a new project" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/CreateProject/should fail if slug already exists" : {
                    "value" : "{\"errors\":[{\"message\":\"slug already exists\"}]}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/DescriptionValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"description\"}]}"
                  },
                  "PROJECT/DescriptionValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 10 and 10000\",\"param\":\"description\",\"value\":\"\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by ID",
        "description" : "This endpoint allows the retrieval of a single project using its ID. It might be used to generate the specific project page.",
        "operationId" : "PROJECT/GetProjectById/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/GetProjectById/should fail if the project does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"project not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/GetProjectById/should return the project" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Update projects",
        "description" : "Update a previously created project, using its ID.",
        "operationId" : "PROJECT/",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/project-request"
              },
              "examples" : {
                "PROJECT/BodyValidation/should be required" : {
                  "value" : "{\"title\":\"Awesome project\"}"
                },
                "PROJECT/BodyValidation/size" : {
                  "value" : "{\"title\":\"Awesome project\",\"description\":\"\"}"
                },
                "PROJECT/SlugValidation/size" : {
                  "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"slug\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                },
                "PROJECT/TitleValidation/should be required" : {
                  "value" : "{\"description\":\"this is a test project\"}"
                },
                "PROJECT/TitleValidation/size" : {
                  "value" : "{\"title\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"description\":\"this is a test project\"}"
                },
                "PROJECT/UpdateProject/should fail if the project does not exist" : {
                  "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\"}"
                },
                "PROJECT/UpdateProject/should fail if the slug already exists" : {
                  "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\",\"isArchived\":true,\"slug\":\"new-title\"}"
                },
                "PROJECT/UpdateProject/should update the project with the slug" : {
                  "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\",\"isArchived\":true,\"slug\":\"new-title\"}"
                },
                "PROJECT/UpdateProject/should update the project without the slug" : {
                  "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\",\"teamMembersIds\":[],\"isArchived\":true}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/BodyValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"description\"}]}"
                  },
                  "PROJECT/BodyValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 10 and 10000\",\"param\":\"description\",\"value\":\"\"}]}"
                  },
                  "PROJECT/SlugValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"slug\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  },
                  "PROJECT/TitleValidation/should be required" : {
                    "value" : "{\"errors\":[{\"message\":\"required\",\"param\":\"title\"}]}"
                  },
                  "PROJECT/TitleValidation/size" : {
                    "value" : "{\"errors\":[{\"message\":\"size must be between 2 and 500\",\"param\":\"title\",\"value\":\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}]}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/UpdateProject/should fail if the project does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"project not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "422",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/UpdateProject/should fail if the slug already exists" : {
                    "value" : "{\"errors\":[{\"message\":\"slug already exists\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/UpdateProject/should update the project with the slug" : {
                    "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\",\"teamMembers\":[],\"slug\":\"new-title\",\"isArchived\":true,\"technologies\":[],\"id\":1}"
                  },
                  "PROJECT/UpdateProject/should update the project without the slug" : {
                    "value" : "{\"title\":\"New Title\",\"description\":\"New description of the project\",\"teamMembers\":[],\"slug\":\"awesome-project\",\"isArchived\":true,\"technologies\":[],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Projects" ],
        "summary" : "Delete projects",
        "description" : "This operation deletes an projects using its ID.",
        "operationId" : "PROJECT/DeleteProject/should ",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/empty-response"
                },
                "examples" : {
                  "PROJECT/DeleteProject/should delete the project" : {
                    "value" : "{}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/DeleteProject/should fail if the project does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"project not found with id 1234\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{slug}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get projects by slug",
        "description" : "This endpoint allows the retrieval of a single project using its slug.",
        "operationId" : "PROJECT/GetProjectBySlug/should ",
        "parameters" : [ {
          "name" : "slug",
          "in" : "path",
          "description" : "Short and friendly textual project identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/GetProjectBySlug/should fail if the project does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"project not found with slug does-not-exist\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/GetProjectBySlug/should return the project" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/archive" : {
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Archive projects",
        "description" : "This endpoint archives a project.\nThis is useful to mark no longer maintained or complete projects.",
        "operationId" : "PROJECT/ArchiveProject/should archive the project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project to archive",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/ArchiveProject/should archive the project" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1}],\"slug\":\"awesome-project\",\"isArchived\":true,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/unarchive" : {
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Unarchive projects",
        "description" : "This endpoint unarchives a project.\nThis is useful to mark previously archived projects as active.",
        "operationId" : "PROJECT/UnarchiveProject/should unarchive the project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project to unarchive",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/UnarchiveProject/should unarchive the project" : {
                    "value" : "{\"title\":\"proj1\",\"description\":\"very cool project\",\"teamMembers\":[],\"isArchived\":false,\"technologies\":[\"React\",\"TailwindCSS\"],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/addTeamMember/{accountId}" : {
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Add team member to Project",
        "description" : "This operation adds a team member to a given project.",
        "operationId" : "PROJECT/AddTeamMember/should ",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "ID of the project to add the member to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of the account to add",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/AddTeamMember/should add a team member" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[{\"name\":\"Test Account\",\"email\":\"test_account@test.com\",\"bio\":\"This is a test account\",\"birthDate\":\"28-07-2001\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":1}],\"id\":1},{\"name\":\"Another test Account\",\"email\":\"test2_account@test.com\",\"bio\":\"This is another test account\",\"birthDate\":\"04-04-2003\",\"photoPath\":\"https://test-photo.com\",\"linkedin\":\"https://linkedin.com\",\"github\":\"https://github.com\",\"websites\":[{\"url\":\"https://test-website.com\",\"iconPath\":\"https://test-website.com/logo.png\",\"id\":2}],\"id\":2}],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/AddTeamMember/should fail if the team member does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with id 1234\"}]}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/removeTeamMember/{accountId}" : {
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Remove team member from Project",
        "description" : "This operation removes a team member of a given project.",
        "operationId" : "PROJECT/RemoveTeamMember/should ",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "ID of the project to remove the member from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "description" : "ID of the account to remove",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/error-response"
                },
                "examples" : {
                  "PROJECT/RemoveTeamMember/should fail if the team member does not exist" : {
                    "value" : "{\"errors\":[{\"message\":\"account not found with id 1234\"}]}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project-response"
                },
                "examples" : {
                  "PROJECT/RemoveTeamMember/should remove a team member" : {
                    "value" : "{\"title\":\"Awesome project\",\"description\":\"this is a test project\",\"teamMembers\":[],\"slug\":\"awesome-project\",\"isArchived\":false,\"technologies\":[\"Java\",\"Kotlin\",\"Spring\"],\"id\":1}"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "event-request" : {
        "title" : "event-request",
        "type" : "object",
        "properties" : {
          "teamMembersIds" : {
            "type" : "array",
            "description" : "Team member IDs",
            "items" : {
              "type" : "object",
              "properties" : {
                "*" : {
                  "type" : "number",
                  "description" : "Team member ID"
                }
              }
            }
          },
          "registerUrl" : {
            "type" : "string",
            "description" : "Link to the event registration"
          },
          "thumbnailPath" : {
            "type" : "string",
            "description" : "Thumbnail of the event"
          },
          "description" : {
            "type" : "string",
            "description" : "Event description"
          },
          "location" : {
            "type" : "string",
            "description" : "Location for the event"
          },
          "category" : {
            "type" : "string",
            "description" : "Event category"
          },
          "title" : {
            "type" : "string",
            "description" : "Event title"
          },
          "dateInterval" : {
            "type" : "object",
            "properties" : {
              "endDate" : {
                "type" : "string",
                "description" : "Event finishing date"
              },
              "startDate" : {
                "type" : "string",
                "description" : "Event beginning date"
              }
            },
            "description" : "Date interval of the event"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual event identifier"
          }
        }
      },
      "auth-refresh-response" : {
        "title" : "auth-refresh-response",
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string",
            "description" : "Access token, used to identify the user"
          }
        }
      },
      "project-request" : {
        "title" : "project-request",
        "type" : "object",
        "properties" : {
          "technologies" : {
            "type" : "object",
            "properties" : {
              "*" : {
                "type" : "string",
                "description" : "Technology"
              }
            },
            "description" : "Array of technologies used in the project"
          },
          "teamMembersIds" : {
            "type" : "object",
            "properties" : {
              "*" : {
                "type" : "number",
                "description" : "Account ID"
              }
            },
            "description" : "Array with IDs of members associated with the project"
          },
          "isArchived" : {
            "type" : "boolean",
            "description" : "If the project is no longer maintained"
          },
          "description" : {
            "type" : "string",
            "description" : "Project description"
          },
          "title" : {
            "type" : "string",
            "description" : "Project title"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual event identifier"
          }
        }
      },
      "post-request" : {
        "title" : "post-request",
        "type" : "object",
        "properties" : {
          "thumbnailPath" : {
            "type" : "string",
            "description" : "Path for the post thumbnail image"
          },
          "body" : {
            "type" : "string",
            "description" : "Post body"
          },
          "title" : {
            "type" : "string",
            "description" : "Post title"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual post identifier"
          }
        }
      },
      "arrayOf-generation-years-response" : {
        "title" : "arrayOf-generation-years-response",
        "type" : "array",
        "description" : "List of all generation years",
        "items" : {
          "type" : "object",
          "properties" : {
            "*" : {
              "type" : "string",
              "description" : "School year"
            }
          },
          "description" : "List of all generation years"
        }
      },
      "auth-new-response" : {
        "title" : "auth-new-response",
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string",
            "description" : "Access token, used to identify the user"
          },
          "refresh_token" : {
            "type" : "string",
            "description" : "Refresh token, used to refresh the access token"
          }
        }
      },
      "error-response" : {
        "title" : "error-response",
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "Array of detected errors",
            "items" : {
              "type" : "object",
              "properties" : {
                "param" : {
                  "type" : "string",
                  "description" : "Parameter associated with the error"
                },
                "message" : {
                  "type" : "string",
                  "description" : "Error message of a given error"
                },
                "value" : {
                  "type" : "object",
                  "description" : "Value that caused the error"
                }
              }
            }
          }
        }
      },
      "event-response" : {
        "title" : "event-response",
        "type" : "object",
        "properties" : {
          "registerUrl" : {
            "type" : "string",
            "description" : "Link to the event registration"
          },
          "thumbnailPath" : {
            "type" : "string",
            "description" : "Thumbnail of the event"
          },
          "description" : {
            "type" : "string",
            "description" : "Event description"
          },
          "location" : {
            "type" : "string",
            "description" : "Location for the event"
          },
          "id" : {
            "type" : "number",
            "description" : "Event ID"
          },
          "teamMembers" : {
            "type" : "array",
            "description" : "Array of members associated with the event",
            "items" : {
              "type" : "object",
              "properties" : {
                "github" : {
                  "type" : "string",
                  "description" : "Handle/link to the owner's GitHub profile"
                },
                "photoPath" : {
                  "type" : "string",
                  "description" : "Path to the photo resource"
                },
                "roles" : {
                  "type" : "array",
                  "description" : "Array with the roles of the account",
                  "items" : {
                    "oneOf" : [ {
                      "type" : "object"
                    }, {
                      "type" : "boolean"
                    }, {
                      "type" : "string"
                    }, {
                      "type" : "number"
                    } ]
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the account owner"
                },
                "bio" : {
                  "type" : "string",
                  "description" : "Short profile description"
                },
                "websites" : {
                  "type" : "array",
                  "description" : "Array with relevant websites about the owner",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "number",
                        "description" : "Related website ID"
                      },
                      "iconPath" : {
                        "type" : "string",
                        "description" : "URL to the website's icon"
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "URL to the website"
                      }
                    }
                  }
                },
                "id" : {
                  "type" : "number",
                  "description" : "Account ID"
                },
                "linkedin" : {
                  "type" : "string",
                  "description" : "Handle/link to the owner's LinkedIn profile"
                },
                "birthDate" : {
                  "type" : "string",
                  "description" : "Birth date of the owner"
                },
                "email" : {
                  "type" : "string",
                  "description" : "Email associated to the account"
                }
              }
            }
          },
          "category" : {
            "type" : "string",
            "description" : "Event category"
          },
          "title" : {
            "type" : "string",
            "description" : "Event title"
          },
          "dateInterval" : {
            "type" : "object",
            "properties" : {
              "endDate" : {
                "type" : "string",
                "description" : "Event finishing date"
              },
              "startDate" : {
                "type" : "string",
                "description" : "Event beginning date"
              }
            },
            "description" : "Date interval of the event"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual event identifier"
          }
        }
      },
      "account-response" : {
        "title" : "account-response",
        "type" : "object",
        "properties" : {
          "github" : {
            "type" : "string",
            "description" : "Handle/link to the owner's GitHub profile"
          },
          "photoPath" : {
            "type" : "string",
            "description" : "Path to the photo resource"
          },
          "roles" : {
            "type" : "array",
            "description" : "Array with the roles of the account",
            "items" : {
              "oneOf" : [ {
                "type" : "object"
              }, {
                "type" : "boolean"
              }, {
                "type" : "string"
              }, {
                "type" : "number"
              } ]
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the account owner"
          },
          "bio" : {
            "type" : "string",
            "description" : "Short profile description"
          },
          "websites" : {
            "type" : "array",
            "description" : "Array with relevant websites about the owner",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "number",
                  "description" : "Related website ID"
                },
                "iconPath" : {
                  "type" : "string",
                  "description" : "URL to the website's icon"
                },
                "url" : {
                  "type" : "string",
                  "description" : "URL to the website"
                }
              }
            }
          },
          "id" : {
            "type" : "number",
            "description" : "Account ID"
          },
          "linkedin" : {
            "type" : "string",
            "description" : "Handle/link to the owner's LinkedIn profile"
          },
          "birthDate" : {
            "type" : "string",
            "description" : "Birth date of the owner"
          },
          "email" : {
            "type" : "string",
            "description" : "Email associated to the account"
          }
        }
      },
      "password-change-request" : {
        "title" : "password-change-request",
        "type" : "object",
        "properties" : {
          "oldPassword" : {
            "type" : "string",
            "description" : "Current account password"
          },
          "newPassword" : {
            "type" : "string",
            "description" : "New account password"
          }
        }
      },
      "generation-request" : {
        "title" : "generation-request",
        "type" : "object",
        "properties" : {
          "roles" : {
            "type" : "array",
            "description" : "Roles associated with the generation",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountIds" : {
                  "type" : "array",
                  "description" : "Array of account ids associated with this role",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "*" : {
                        "type" : "number",
                        "description" : "Account id"
                      }
                    }
                  }
                },
                "permissions" : {
                  "type" : "array",
                  "description" : "Array of permissions",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "*" : {
                        "type" : "number",
                        "description" : "Permission"
                      }
                    }
                  }
                },
                "associatedActivities" : {
                  "type" : "array",
                  "description" : "Array of activities associated with this role",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "activityId" : {
                        "type" : "number",
                        "description" : "Id of the activity"
                      },
                      "permissions" : {
                        "type" : "array",
                        "description" : "Permissions of the role in the activity",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "*" : {
                              "type" : "number",
                              "description" : "Permissions"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the role"
                },
                "isSection" : {
                  "type" : "boolean",
                  "description" : "If the role represents a generation section"
                }
              }
            }
          },
          "schoolYear" : {
            "type" : "string",
            "description" : "School year of the generation"
          }
        }
      },
      "arrayOf-account-response" : {
        "title" : "arrayOf-account-response",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "github" : {
              "type" : "string",
              "description" : "Handle/link to the owner's GitHub profile"
            },
            "photoPath" : {
              "type" : "string",
              "description" : "Path to the photo resource"
            },
            "roles" : {
              "type" : "array",
              "description" : "Array with the roles of the account",
              "items" : {
                "oneOf" : [ {
                  "type" : "object"
                }, {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                }, {
                  "type" : "number"
                } ]
              }
            },
            "name" : {
              "type" : "string",
              "description" : "Name of the account owner"
            },
            "bio" : {
              "type" : "string",
              "description" : "Short profile description"
            },
            "websites" : {
              "type" : "array",
              "description" : "Array with relevant websites about the owner",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "number",
                    "description" : "Related website ID"
                  },
                  "iconPath" : {
                    "type" : "string",
                    "description" : "URL to the website's icon"
                  },
                  "url" : {
                    "type" : "string",
                    "description" : "URL to the website"
                  }
                }
              }
            },
            "id" : {
              "type" : "number",
              "description" : "Account ID"
            },
            "linkedin" : {
              "type" : "string",
              "description" : "Handle/link to the owner's LinkedIn profile"
            },
            "birthDate" : {
              "type" : "string",
              "description" : "Birth date of the owner"
            },
            "email" : {
              "type" : "string",
              "description" : "Email associated to the account"
            }
          }
        }
      },
      "generation-response" : {
        "title" : "generation-response",
        "type" : "object",
        "properties" : {
          "roles" : {
            "type" : "array",
            "description" : "Roles associated with the generation",
            "items" : {
              "type" : "object",
              "properties" : {
                "permissions" : {
                  "type" : "array",
                  "description" : "Array of permissions",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "*" : {
                        "type" : "string",
                        "description" : "Permission"
                      }
                    }
                  }
                },
                "associatedActivities" : {
                  "type" : "array",
                  "description" : "Array of activities associated with this role",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "activity" : {
                        "type" : "object",
                        "properties" : {
                          "technologies" : {
                            "type" : "array",
                            "description" : "Array of technologies",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "*" : {
                                  "type" : "string",
                                  "description" : "Technology"
                                }
                              }
                            }
                          },
                          "isArchived" : {
                            "type" : "boolean",
                            "description" : "If the activity is archived"
                          },
                          "thumbnailPath" : {
                            "type" : "string",
                            "description" : "Path to the thumbnail"
                          },
                          "description" : {
                            "type" : "string",
                            "description" : "Description of the activity"
                          },
                          "id" : {
                            "type" : "number",
                            "description" : "Id of the activity"
                          },
                          "teamMembers" : {
                            "type" : "array",
                            "description" : "Array of team members",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "github" : {
                                  "type" : "string",
                                  "description" : "Handle/link to the owner's GitHub profile"
                                },
                                "photoPath" : {
                                  "type" : "string",
                                  "description" : "Path to the photo resource"
                                },
                                "roles" : {
                                  "type" : "array",
                                  "description" : "Array with the roles of the account",
                                  "items" : {
                                    "oneOf" : [ {
                                      "type" : "object"
                                    }, {
                                      "type" : "boolean"
                                    }, {
                                      "type" : "string"
                                    }, {
                                      "type" : "number"
                                    } ]
                                  }
                                },
                                "name" : {
                                  "type" : "string",
                                  "description" : "Name of the account owner"
                                },
                                "bio" : {
                                  "type" : "string",
                                  "description" : "Short profile description"
                                },
                                "websites" : {
                                  "type" : "array",
                                  "description" : "Array with relevant websites about the owner",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "id" : {
                                        "type" : "number",
                                        "description" : "Related website ID"
                                      },
                                      "iconPath" : {
                                        "type" : "string",
                                        "description" : "URL to the website's icon"
                                      },
                                      "url" : {
                                        "type" : "string",
                                        "description" : "URL to the website"
                                      }
                                    }
                                  }
                                },
                                "id" : {
                                  "type" : "number",
                                  "description" : "Account ID"
                                },
                                "linkedin" : {
                                  "type" : "string",
                                  "description" : "Handle/link to the owner's LinkedIn profile"
                                },
                                "birthDate" : {
                                  "type" : "string",
                                  "description" : "Birth date of the owner"
                                },
                                "email" : {
                                  "type" : "string",
                                  "description" : "Email associated to the account"
                                }
                              }
                            }
                          },
                          "title" : {
                            "type" : "string",
                            "description" : "Title of the activity"
                          },
                          "dateInterval" : {
                            "type" : "object",
                            "properties" : {
                              "endDate" : {
                                "type" : "string",
                                "description" : "Event finishing date"
                              },
                              "startDate" : {
                                "type" : "string",
                                "description" : "Event beginning date"
                              }
                            },
                            "description" : "Date interval of the activity"
                          }
                        },
                        "description" : "Activity of the association"
                      },
                      "permissions" : {
                        "type" : "array",
                        "description" : "Permissions of the role in the activity",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "*" : {
                              "type" : "string",
                              "description" : "Permissions"
                            }
                          }
                        }
                      },
                      "id" : {
                        "type" : "number",
                        "description" : "Id of the role"
                      }
                    }
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the role"
                },
                "isSection" : {
                  "type" : "boolean",
                  "description" : "If the role represents a generation section"
                },
                "id" : {
                  "type" : "number",
                  "description" : "Id of the role/activity association"
                }
              }
            }
          },
          "schoolYear" : {
            "type" : "string",
            "description" : "School year of the generation"
          },
          "id" : {
            "type" : "number",
            "description" : "Id of the generation"
          }
        }
      },
      "arrayOf-post-response" : {
        "title" : "arrayOf-post-response",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "lastUpdatedAt" : {
              "type" : "string",
              "description" : "Post's latest update"
            },
            "publishDate" : {
              "type" : "string",
              "description" : "Post's publish date"
            },
            "thumbnailPath" : {
              "type" : "string",
              "description" : "Path for the post thumbnail image"
            },
            "id" : {
              "type" : "number",
              "description" : "Post ID"
            },
            "body" : {
              "type" : "string",
              "description" : "Post body"
            },
            "title" : {
              "type" : "string",
              "description" : "Post title"
            },
            "slug" : {
              "type" : "string",
              "description" : "Short and friendly textual post identifier"
            }
          }
        }
      },
      "auth-refresh-request" : {
        "title" : "auth-refresh-request",
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Refresh token, used to refresh the access token"
          }
        }
      },
      "arrayOf-project-response" : {
        "title" : "arrayOf-project-response",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "technologies" : {
              "type" : "object",
              "properties" : {
                "*" : {
                  "type" : "string",
                  "description" : "Technology"
                }
              },
              "description" : "Array of technologies used in the project"
            },
            "isArchived" : {
              "type" : "boolean",
              "description" : "If the project is no longer maintained"
            },
            "description" : {
              "type" : "string",
              "description" : "Project description"
            },
            "id" : {
              "type" : "number",
              "description" : "Project ID"
            },
            "teamMembers" : {
              "type" : "array",
              "description" : "Array of members associated with the project",
              "items" : {
                "type" : "object",
                "properties" : {
                  "github" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's GitHub profile"
                  },
                  "photoPath" : {
                    "type" : "string",
                    "description" : "Path to the photo resource"
                  },
                  "roles" : {
                    "type" : "array",
                    "description" : "Array with the roles of the account",
                    "items" : {
                      "oneOf" : [ {
                        "type" : "object"
                      }, {
                        "type" : "boolean"
                      }, {
                        "type" : "string"
                      }, {
                        "type" : "number"
                      } ]
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the account owner"
                  },
                  "bio" : {
                    "type" : "string",
                    "description" : "Short profile description"
                  },
                  "websites" : {
                    "type" : "array",
                    "description" : "Array with relevant websites about the owner",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "number",
                          "description" : "Related website ID"
                        },
                        "iconPath" : {
                          "type" : "string",
                          "description" : "URL to the website's icon"
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "URL to the website"
                        }
                      }
                    }
                  },
                  "id" : {
                    "type" : "number",
                    "description" : "Account ID"
                  },
                  "linkedin" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's LinkedIn profile"
                  },
                  "birthDate" : {
                    "type" : "string",
                    "description" : "Birth date of the owner"
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "Email associated to the account"
                  }
                }
              }
            },
            "title" : {
              "type" : "string",
              "description" : "Project title"
            },
            "slug" : {
              "type" : "string",
              "description" : "Short and friendly textual event identifier"
            }
          }
        }
      },
      "account-request" : {
        "title" : "account-request",
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "Account password"
          },
          "github" : {
            "type" : "string",
            "description" : "Handle/link to the owner's GitHub profile"
          },
          "photoPath" : {
            "type" : "string",
            "description" : "Path to the photo resource"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the account owner"
          },
          "bio" : {
            "type" : "string",
            "description" : "Short profile description"
          },
          "websites" : {
            "type" : "array",
            "description" : "Array with relevant websites about the owner",
            "items" : {
              "type" : "object",
              "properties" : {
                "iconPath" : {
                  "type" : "string",
                  "description" : "URL to the website's icon"
                },
                "url" : {
                  "type" : "string",
                  "description" : "URL to the website"
                }
              }
            }
          },
          "linkedin" : {
            "type" : "string",
            "description" : "Handle/link to the owner's LinkedIn profile"
          },
          "birthDate" : {
            "type" : "string",
            "description" : "Birth date of the owner"
          },
          "email" : {
            "type" : "string",
            "description" : "Email associated to the account"
          }
        }
      },
      "arrayOf-event-response" : {
        "title" : "arrayOf-event-response",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "registerUrl" : {
              "type" : "string",
              "description" : "Link to the event registration"
            },
            "thumbnailPath" : {
              "type" : "string",
              "description" : "Thumbnail of the event"
            },
            "description" : {
              "type" : "string",
              "description" : "Event description"
            },
            "location" : {
              "type" : "string",
              "description" : "Location for the event"
            },
            "id" : {
              "type" : "number",
              "description" : "Event ID"
            },
            "teamMembers" : {
              "type" : "array",
              "description" : "Array of members associated with the event",
              "items" : {
                "type" : "object",
                "properties" : {
                  "github" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's GitHub profile"
                  },
                  "photoPath" : {
                    "type" : "string",
                    "description" : "Path to the photo resource"
                  },
                  "roles" : {
                    "type" : "array",
                    "description" : "Array with the roles of the account",
                    "items" : {
                      "oneOf" : [ {
                        "type" : "object"
                      }, {
                        "type" : "boolean"
                      }, {
                        "type" : "string"
                      }, {
                        "type" : "number"
                      } ]
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the account owner"
                  },
                  "bio" : {
                    "type" : "string",
                    "description" : "Short profile description"
                  },
                  "websites" : {
                    "type" : "array",
                    "description" : "Array with relevant websites about the owner",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "number",
                          "description" : "Related website ID"
                        },
                        "iconPath" : {
                          "type" : "string",
                          "description" : "URL to the website's icon"
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "URL to the website"
                        }
                      }
                    }
                  },
                  "id" : {
                    "type" : "number",
                    "description" : "Account ID"
                  },
                  "linkedin" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's LinkedIn profile"
                  },
                  "birthDate" : {
                    "type" : "string",
                    "description" : "Birth date of the owner"
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "Email associated to the account"
                  }
                }
              }
            },
            "category" : {
              "type" : "string",
              "description" : "Event category"
            },
            "title" : {
              "type" : "string",
              "description" : "Event title"
            },
            "dateInterval" : {
              "type" : "object",
              "properties" : {
                "endDate" : {
                  "type" : "string",
                  "description" : "Event finishing date"
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "Event beginning date"
                }
              },
              "description" : "Date interval of the event"
            },
            "slug" : {
              "type" : "string",
              "description" : "Short and friendly textual event identifier"
            }
          }
        }
      },
      "update-generation-year-request" : {
        "title" : "update-generation-year-request",
        "type" : "object",
        "properties" : {
          "schoolYear" : {
            "type" : "string",
            "description" : "New school year"
          }
        }
      },
      "auth-new-request" : {
        "title" : "auth-new-request",
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "Password of the account"
          },
          "email" : {
            "type" : "string",
            "description" : "Email of the account"
          }
        }
      },
      "project-response" : {
        "title" : "project-response",
        "type" : "object",
        "properties" : {
          "technologies" : {
            "type" : "object",
            "properties" : {
              "*" : {
                "type" : "string",
                "description" : "Technology"
              }
            },
            "description" : "Array of technologies used in the project"
          },
          "isArchived" : {
            "type" : "boolean",
            "description" : "If the project is no longer maintained"
          },
          "description" : {
            "type" : "string",
            "description" : "Project description"
          },
          "id" : {
            "type" : "number",
            "description" : "Project ID"
          },
          "teamMembers" : {
            "type" : "array",
            "description" : "Array of members associated with the project",
            "items" : {
              "type" : "object",
              "properties" : {
                "github" : {
                  "type" : "string",
                  "description" : "Handle/link to the owner's GitHub profile"
                },
                "photoPath" : {
                  "type" : "string",
                  "description" : "Path to the photo resource"
                },
                "roles" : {
                  "type" : "array",
                  "description" : "Array with the roles of the account",
                  "items" : {
                    "oneOf" : [ {
                      "type" : "object"
                    }, {
                      "type" : "boolean"
                    }, {
                      "type" : "string"
                    }, {
                      "type" : "number"
                    } ]
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of the account owner"
                },
                "bio" : {
                  "type" : "string",
                  "description" : "Short profile description"
                },
                "websites" : {
                  "type" : "array",
                  "description" : "Array with relevant websites about the owner",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "number",
                        "description" : "Related website ID"
                      },
                      "iconPath" : {
                        "type" : "string",
                        "description" : "URL to the website's icon"
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "URL to the website"
                      }
                    }
                  }
                },
                "id" : {
                  "type" : "number",
                  "description" : "Account ID"
                },
                "linkedin" : {
                  "type" : "string",
                  "description" : "Handle/link to the owner's LinkedIn profile"
                },
                "birthDate" : {
                  "type" : "string",
                  "description" : "Birth date of the owner"
                },
                "email" : {
                  "type" : "string",
                  "description" : "Email associated to the account"
                }
              }
            }
          },
          "title" : {
            "type" : "string",
            "description" : "Project title"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual event identifier"
          }
        }
      },
      "auth-check-response" : {
        "title" : "auth-check-response",
        "type" : "object",
        "properties" : {
          "authenticated_user" : {
            "type" : "object",
            "properties" : {
              "github" : {
                "type" : "string",
                "description" : "Handle/link to the owner's GitHub profile"
              },
              "photoPath" : {
                "type" : "string",
                "description" : "Path to the photo resource"
              },
              "roles" : {
                "type" : "array",
                "description" : "Array with the roles of the account",
                "items" : {
                  "oneOf" : [ {
                    "type" : "object"
                  }, {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "number"
                  } ]
                }
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the account owner"
              },
              "bio" : {
                "type" : "string",
                "description" : "Short profile description"
              },
              "websites" : {
                "type" : "array",
                "description" : "Array with relevant websites about the owner",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "number",
                      "description" : "Related website ID"
                    },
                    "iconPath" : {
                      "type" : "string",
                      "description" : "URL to the website's icon"
                    },
                    "url" : {
                      "type" : "string",
                      "description" : "URL to the website"
                    }
                  }
                }
              },
              "id" : {
                "type" : "number",
                "description" : "Account ID"
              },
              "linkedin" : {
                "type" : "string",
                "description" : "Handle/link to the owner's LinkedIn profile"
              },
              "birthDate" : {
                "type" : "string",
                "description" : "Birth date of the owner"
              },
              "email" : {
                "type" : "string",
                "description" : "Email associated to the account"
              }
            },
            "description" : "Authenticated account's information."
          }
        }
      },
      "generation-sections-response" : {
        "title" : "generation-sections-response",
        "type" : "array",
        "description" : "Generation sections",
        "items" : {
          "type" : "object",
          "properties" : {
            "section" : {
              "type" : "string",
              "description" : "Section role name"
            },
            "accounts" : {
              "type" : "array",
              "description" : "Array of accounts of with the section role",
              "items" : {
                "type" : "object",
                "properties" : {
                  "github" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's GitHub profile"
                  },
                  "photoPath" : {
                    "type" : "string",
                    "description" : "Path to the photo resource"
                  },
                  "roles" : {
                    "type" : "array",
                    "description" : "Array with the roles of the account",
                    "items" : {
                      "oneOf" : [ {
                        "type" : "object"
                      }, {
                        "type" : "boolean"
                      }, {
                        "type" : "string"
                      }, {
                        "type" : "number"
                      } ]
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of the account owner"
                  },
                  "bio" : {
                    "type" : "string",
                    "description" : "Short profile description"
                  },
                  "websites" : {
                    "type" : "array",
                    "description" : "Array with relevant websites about the owner",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "number",
                          "description" : "Related website ID"
                        },
                        "iconPath" : {
                          "type" : "string",
                          "description" : "URL to the website's icon"
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "URL to the website"
                        }
                      }
                    }
                  },
                  "id" : {
                    "type" : "number",
                    "description" : "Account ID"
                  },
                  "linkedin" : {
                    "type" : "string",
                    "description" : "Handle/link to the owner's LinkedIn profile"
                  },
                  "birthDate" : {
                    "type" : "string",
                    "description" : "Birth date of the owner"
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "Email associated to the account"
                  }
                }
              }
            }
          },
          "description" : "Generation sections"
        }
      },
      "post-response" : {
        "title" : "post-response",
        "type" : "object",
        "properties" : {
          "lastUpdatedAt" : {
            "type" : "string",
            "description" : "Post's latest update"
          },
          "publishDate" : {
            "type" : "string",
            "description" : "Post's publish date"
          },
          "thumbnailPath" : {
            "type" : "string",
            "description" : "Path for the post thumbnail image"
          },
          "id" : {
            "type" : "number",
            "description" : "Post ID"
          },
          "body" : {
            "type" : "string",
            "description" : "Post body"
          },
          "title" : {
            "type" : "string",
            "description" : "Post title"
          },
          "slug" : {
            "type" : "string",
            "description" : "Short and friendly textual post identifier"
          }
        }
      },
      "empty-response" : {
        "title" : "empty-response",
        "type" : "object"
      }
    }
  }
}